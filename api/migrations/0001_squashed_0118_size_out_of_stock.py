# Generated by Django 5.1.6 on 2025-05-04 14:06

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('api', '0001_initial'), ('api', '0002_remove_bed_category_remove_bed_country_and_more'), ('api', '0003_stand_pillow_mattresspads_mattrass_blanket_bedsheets_and_more'), ('api', '0004_alter_basis_id_alter_bed_id_alter_bedsheets_id_and_more'), ('api', '0005_basis_best_bed_best_bedsheets_best_blanket_best_and_more'), ('api', '0006_remove_basis_country_remove_bed_country_and_more'), ('api', '0007_size_remove_bed_length_remove_bed_width_and_more'), ('api', '0008_alter_bed_options_alter_size_options_and_more'), ('api', '0009_rename_mattresspads_mattrasspad_and_more'), ('api', '0010_rename_property_choice_property_ru_and_more'), ('api', '0011_alter_mattrass_options_alter_basis_height_and_more'), ('api', '0012_alter_basis_legs_height_alter_mattrass_height_and_more'), ('api', '0013_alter_choice_property_ro'), ('api', '0014_alter_basis_options_alter_bed_options_and_more'), ('api', '0015_alter_bedsheets_bedsheets_color_and_more'), ('api', '0016_size_category'), ('api', '0017_rename_mattras_type_mattrass_mattrass_type'), ('api', '0018_alter_basis_basis_type_alter_basis_name_and_more'), ('api', '0019_image_video_basis_desc_basis_discount_bed_desc_and_more'), ('api', '0020_alter_basis_videos_alter_bed_videos_and_more'), ('api', '0021_alter_basis_desc_alter_bed_desc_alter_bedsheets_desc_and_more'), ('api', '0022_category_desc'), ('api', '0023_category_name_en_pl_category_name_en_s_and_more'), ('api', '0024_rename_desc_category_desc_en_category_desc_ru_and_more'), ('api', '0025_category_desc_ro'), ('api', '0026_alter_category_desc_en_alter_category_desc_ro_and_more'), ('api', '0027_alter_choice_category_alter_size_category'), ('api', '0028_remove_basis_desc_remove_bed_desc_and_more'), ('api', '0029_mattress_mattresspad_remove_mattrasspad_binding_and_more'), ('api', '0030_remove_basis_basis_type_remove_basis_category_and_more'), ('api', '0031_alter_choice_name_stand_pillow_mattresspad_mattress_and_more'), ('api', '0032_remove_bedsheets_package_remove_blanket_package_and_more'), ('api', '0033_remove_pillow_length_remove_pillow_width_and_more'), ('api', '0034_auto_20220728_1228'), ('api', '0035_auto_20220729_2025'), ('api', '0036_auto_20220729_2028'), ('api', '0037_auto_20220802_1550'), ('api', '0038_auto_20220804_1010'), ('api', '0039_auto_20220804_1059'), ('api', '0040_bed_headboard_height'), ('api', '0041_auto_20220804_1340'), ('api', '0042_auto_20220804_1352'), ('api', '0043_auto_20220804_1401'), ('api', '0044_auto_20220804_2104'), ('api', '0045_auto_20220804_2104'), ('api', '0046_auto_20220806_1751'), ('api', '0047_auto_20220806_1751'), ('api', '0048_auto_20220810_1642'), ('api', '0049_auto_20220812_1146'), ('api', '0050_auto_20220820_1040'), ('api', '0051_auto_20220820_1048'), ('api', '0052_auto_20220820_1058'), ('api', '0053_mattress_markers'), ('api', '0054_auto_20220821_1049'), ('api', '0055_auto_20220823_2229'), ('api', '0056_auto_20220823_2229'), ('api', '0057_auto_20220823_2233'), ('api', '0058_auto_20220823_2233'), ('api', '0059_auto_20220825_2105'), ('api', '0060_auto_20220825_2113'), ('api', '0061_auto_20220825_2115'), ('api', '0062_auto_20220825_2116'), ('api', '0063_auto_20220825_2233'), ('api', '0064_auto_20220828_2016'), ('api', '0065_auto_20220828_2240'), ('api', '0066_auto_20220830_2136'), ('api', '0067_auto_20220831_1051'), ('api', '0068_auto_20220831_1055'), ('api', '0069_auto_20220903_1709'), ('api', '0070_auto_20220903_1727'), ('api', '0071_auto_20220904_1430'), ('api', '0072_auto_20220904_2137'), ('api', '0073_auto_20220905_1800'), ('api', '0074_auto_20220925_1916'), ('api', '0075_auto_20221001_1702'), ('api', '0076_size_discount_alter_bedsheets_sizes_and_more'), ('api', '0077_alter_size_category'), ('api', '0078_size_is_sailng'), ('api', '0079_rename_is_sailng_size_on_sale'), ('api', '0080_stock'), ('api', '0081_alter_stock_options_and_more'), ('api', '0082_alter_stock_options_remove_size_pricemdl'), ('api', '0083_category_desc_en_category_desc_ro_category_desc_ru'), ('api', '0084_alter_category_desc_en_alter_category_desc_ro_and_more'), ('api', '0085_alter_choice_name_stockable_action'), ('api', '0086_alter_action_options_and_more'), ('api', '0087_remove_bedsheetssize_duvet_cover_size_and_more'), ('api', '0088_rename_duvet_cover_size_1_bedsheetssize_duvet_cover_size_and_more'), ('api', '0089_alter_bedsheetssize_duvet_cover_size_and_more'), ('api', '0090_stockable_product_alter_action_type_and_more'), ('api', '0091_alter_stockable_product_alter_stockable_size'), ('api', '0092_table_stockable_table'), ('api', '0093_remove_table_date_table_month_table_year_and_more'), ('api', '0094_remove_stockable_table_delete_action_and_more'), ('api', '0095_remove_bed_bed_type_remove_bed_category_and_more'), ('api', '0096_initial'), ('api', '0097_basisimage_temp_id_basissize_temp_id_and_more'), ('api', '0098_alter_bed_options_alter_characteristic_options_and_more'), ('api', '0099_rename_name_en_characteristictype_label_en_and_more'), ('api', '0100_characteristicscollection_remove_basis_category_and_more'), ('api', '0101_alter_characteristictype_options_and_more'), ('api', '0102_technology_temp_id'), ('api', '0103_remove_booleancharacteristic_temp_id_and_more'), ('api', '0104_alter_category_options_alter_product_options_and_more'), ('api', '0105_remove_stringcharacteristic_characteristic_collection_and_more'), ('api', '0106_characteristictype_data_type_and_more'), ('api', '0107_alter_image_options_alter_size_options_and_more'), ('api', '0108_delete_bedsheetssizeaddition'), ('api', '0109_bedsheetssizeaddition'), ('api', '0110_menucategory_alter_bedsheetssizeaddition_options_and_more'), ('api', '0111_alter_menufilter_options_and_more'), ('api', '0112_remove_characteristictype_is_default_filtering_and_more'), ('api', '0113_collectionprice'), ('api', '0114_alter_collectionprice_options_category_disabled'), ('api', '0115_collectionprice_collection1'), ('api', '0116_alter_collectionprice_options_and_more'), ('api', '0117_rename_collection1_collectionprice_collection'), ('api', '0118_size_out_of_stock')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Название')),
                ('name_s_en', models.CharField(max_length=32, verbose_name='Название (en) (ед. число)')),
                ('name_pl_en', models.CharField(max_length=32, verbose_name='Название (en) (мн. число)')),
                ('name_s_ru', models.CharField(max_length=32, verbose_name='Название (ru) (ед. число)')),
                ('name_pl_ru', models.CharField(max_length=32, verbose_name='Название (ru) (мн. число)')),
                ('name_s_ro', models.CharField(max_length=32, verbose_name='Название (ro) (ед. число)')),
                ('name_pl_ro', models.CharField(max_length=32, verbose_name='Название (ro) (мн. число)')),
                ('desc_en', models.TextField(blank=True, verbose_name='Описание (en)')),
                ('desc_ru', models.TextField(blank=True, verbose_name='Описание (ru)')),
                ('desc_ro', models.TextField(blank=True, verbose_name='Описание (ro)')),
                ('order', models.SmallIntegerField(default=0, verbose_name='Порядок')),
                ('disabled', models.BooleanField(default=False, verbose_name='Отключена')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_technology', models.BooleanField(default=False, verbose_name='Это технология (или слой)?')),
                ('name_en', models.CharField(blank=True, max_length=32, verbose_name='Название (en)')),
                ('name_ru', models.CharField(max_length=32, unique=True, verbose_name='Название (ru)')),
                ('name_ro', models.CharField(blank=True, max_length=32, verbose_name='Название (ro)')),
                ('image', models.ImageField(upload_to='images', verbose_name='Фотография')),
                ('desc_en', models.TextField(verbose_name='Описание (en)')),
                ('desc_ru', models.TextField(verbose_name='Описание (ru)')),
                ('desc_ro', models.TextField(verbose_name='Описание (ro)')),
            ],
            options={
                'verbose_name': 'технология',
                'verbose_name_plural': 'технологии',
            },
        ),
        migrations.CreateModel(
            name='CharacteristicType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Характеристика')),
                ('label_en', models.CharField(max_length=32, verbose_name='Название (en)')),
                ('label_ru', models.CharField(max_length=32, verbose_name='Название (ru)')),
                ('label_ro', models.CharField(max_length=32, verbose_name='Название (ro)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characteristic_types', to='api.category', verbose_name='Категория')),
                ('in_description', models.BooleanField(default=False, verbose_name='Присуствует в описании')),
                ('order', models.SmallIntegerField(default=0, verbose_name='Порядок')),
                ('data_type', models.CharField(choices=[('B', 'булеан'), ('I', 'целое число'), ('S', 'строка')], default='B', max_length=1, verbose_name='Тип данных')),
            ],
            options={
                'verbose_name': 'Тип характеристики',
                'verbose_name_plural': 'Типы характеристик',
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=32, verbose_name='Название (en)')),
                ('name_ru', models.CharField(max_length=32, verbose_name='Название (ru)')),
                ('name_ro', models.CharField(max_length=32, verbose_name='Название (ro)')),
                ('desc_en', models.TextField(verbose_name='Описание (en)')),
                ('desc_ru', models.TextField(verbose_name='Описание (ru)')),
                ('desc_ro', models.TextField(verbose_name='Описание (ro)')),
                ('discount', models.SmallIntegerField(default=0, verbose_name='Скидка (%)')),
                ('best', models.BooleanField(default=False, verbose_name='Лидер продаж')),
                ('markers', models.TextField(blank=True, default='', verbose_name='Маркеры')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.category', verbose_name='Категория')),
                ('structure', models.ManyToManyField(blank=True, related_name='structure_%(class)s', to='api.technology', verbose_name='Структура')),
                ('technologies', models.ManyToManyField(blank=True, related_name='technologies_%(class)s', to='api.technology', verbose_name='Технологии')),
            ],
            options={
                'verbose_name': 'Товары',
                'verbose_name_plural': 'Товары',
                'ordering': ['category', 'name_en'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.SmallIntegerField(default=80, verbose_name='Ширина')),
                ('length', models.SmallIntegerField(default=200, verbose_name='Длина')),
                ('priceEUR', models.SmallIntegerField(default=0, verbose_name='Цена (евро)')),
                ('discount', models.SmallIntegerField(default=0, verbose_name='Скидка (%)')),
                ('on_sale', models.BooleanField(default=False, verbose_name='На распродаже')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sizes', to='api.product', verbose_name='Товар')),
                ('out_of_stock', models.BooleanField(default=True, verbose_name='Отсуствует')),
            ],
            options={
                'verbose_name': 'Размер',
                'verbose_name_plural': 'Размеры',
                'ordering': ['product', '-on_sale'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products', verbose_name='Фото товара')),
                ('is_shortcut', models.BooleanField(default=False, verbose_name='Является превью')),
                ('product', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='api.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
                'ordering': ['product', 'image'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='videos', verbose_name='Фото товара')),
                ('video_id', models.CharField(max_length=64, unique=True, verbose_name='Ссылка на видео')),
                ('product', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos', to='api.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='menu_categories', verbose_name='Иконка')),
                ('name_en', models.CharField(max_length=16, verbose_name='Название (en)')),
                ('name_ru', models.CharField(max_length=16, verbose_name='Название (ru)')),
                ('name_ro', models.CharField(max_length=16, verbose_name='Название (ro)')),
                ('order', models.SmallIntegerField(verbose_name='Порядок')),
                ('sizes', models.ManyToManyField(related_name='menu_categories', to='api.size', verbose_name='Хиты продаж')),
            ],
            options={
                'verbose_name': 'Категория меню',
                'verbose_name_plural': 'Категории меню',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='BedSheetsSizeAddition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('duvet_cover_size', models.CharField(max_length=7, verbose_name='Размер Пододеяльника')),
                ('sheet_size', models.CharField(max_length=7, verbose_name='Простыня')),
                ('elasticated_sheet_size', models.CharField(max_length=7, verbose_name='Простыня на резинке')),
                ('pillowcase_sizes', models.CharField(max_length=11, verbose_name='Наволочки')),
                ('size', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='additions', to='api.size', verbose_name='Размер')),
            ],
            options={
                'verbose_name': 'Дополнение размера постельного белья',
                'verbose_name_plural': 'Дополнения размеров постельного белья',
                'ordering': ['size'],
            },
        ),
        migrations.CreateModel(
            name='BooleanCharacteristic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField(verbose_name='Значение')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boolean_characteristics', to='api.characteristictype', verbose_name='Тип')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boolean_characteristics', to='api.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Характиристика (булеан)',
                'verbose_name_plural': 'Характеристики (булеан)',
            },
        ),
        migrations.CreateModel(
            name='IntegerCharacteristic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(verbose_name='Значение')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integer_characteristics', to='api.characteristictype', verbose_name='Тип')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integer_characteristics', to='api.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Характиристика (целое число)',
                'verbose_name_plural': 'Характеристики (целые числа)',
            },
        ),
        migrations.CreateModel(
            name='StringCharacteristic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_en', models.CharField(max_length=64, verbose_name='Значение (en)')),
                ('value_ru', models.CharField(max_length=64, verbose_name='Значение (ru)')),
                ('value_ro', models.CharField(max_length=64, verbose_name='Значение (ro)')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='string_characteristics', to='api.characteristictype', verbose_name='Тип')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='string_characteristics', to='api.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Характиристика (строка)',
                'verbose_name_plural': 'Характеристики (строки)',
            },
        ),
        migrations.CreateModel(
            name='MenuSubCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=32, verbose_name='Значение')),
                ('name_en', models.CharField(max_length=64, verbose_name='Название (en)')),
                ('name_ru', models.CharField(max_length=64, verbose_name='Название (ru)')),
                ('name_ro', models.CharField(max_length=64, verbose_name='Название (ro)')),
                ('order', models.SmallIntegerField(verbose_name='Порядок')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_sub_categories', to='api.category', verbose_name='Категория товаров')),
                ('menu_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='api.menucategory', verbose_name='Категория в меню')),
                ('products', models.ManyToManyField(blank=True, related_name='menu_sub_categories', to='api.product', verbose_name='Товары')),
            ],
            options={
                'verbose_name': 'Подкатегория меню',
                'verbose_name_plural': 'Подкатегории меню',
                'ordering': ['menu_category__order', 'order'],
            },
        ),
        migrations.CreateModel(
            name='MenuFilter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=32, verbose_name='Значение')),
                ('name_en', models.CharField(max_length=64, verbose_name='Название (en)')),
                ('name_ru', models.CharField(max_length=64, verbose_name='Название (ru)')),
                ('name_ro', models.CharField(max_length=64, verbose_name='Название (ro)')),
                ('order', models.SmallIntegerField(verbose_name='Порядок')),
                ('products', models.ManyToManyField(blank=True, related_name='menu_filters', to='api.product', verbose_name='Товары')),
                ('menu_sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='api.menusubcategory', verbose_name='Подкатегория в меню')),
            ],
            options={
                'verbose_name': 'Фильтр меню',
                'verbose_name_plural': 'Фильтры меню',
                'ordering': ['menu_sub_category__menu_category__order', 'menu_sub_category__order', 'order'],
            },
        ),
        migrations.CreateModel(
            name='CollectionPrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collection', to='api.size', verbose_name='Размер')),
                ('collection', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price', to='api.menufilter', verbose_name='Коллекция')),
            ],
            options={
                'verbose_name': 'Цена коллекции',
                'verbose_name_plural': 'Цены коллекций',
            },
        ),
    ]
